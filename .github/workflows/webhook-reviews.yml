name: Handle Review Webhook

on:
  repository_dispatch:
    types: [review-submitted]

jobs:
  create-review-issue:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Create Review Issue
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const payload = context.payload.client_payload;
            
            // Create GitHub Issue
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Review from ${payload.name}`,
              body: `**Name:** ${payload.name}
**Email:** ${payload.email || 'No email provided'}
**Rating:** ${payload.rating}
**Review:** ${payload.message}

---
*This review was submitted through the website form and will be automatically added to the reviews.json file.*`,
              labels: ['review', 'website-submission']
            });
            
            console.log(`âœ… Created issue #${issue.data.number}`);
            
            // Update reviews.json
            const reviewsPath = 'reviews.json';
            let reviews = { reviews: [] };
            
            try {
              // Read existing reviews
              const existingContent = await github.rest.repos.getContent({
                owner: context.repo.owner,
                repo: context.repo.repo,
                path: reviewsPath
              });
              
              if (existingContent.data.content) {
                const decodedContent = Buffer.from(existingContent.data.content, 'base64').toString();
                reviews = JSON.parse(decodedContent);
              }
            } catch (error) {
              console.log('No existing reviews.json found, creating new one');
            }
            
            // Create new review object
            const newReview = {
              id: reviews.reviews.length + 1,
              name: payload.name,
              position: "Guest",
              avatar: payload.name.charAt(0).toUpperCase() + (payload.name.split(' ')[1] ? payload.name.split(' ')[1].charAt(0).toUpperCase() : ''),
              rating: parseInt(payload.rating),
              text: payload.message,
              date: new Date().toLocaleDateString('en-US', { month: 'long', year: 'numeric' })
            };
            
            // Add to beginning of array
            reviews.reviews.unshift(newReview);
            
            // Update the file
            await github.rest.repos.createOrUpdateFileContents({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: reviewsPath,
              message: `ðŸ¤– Auto-add review from ${payload.name}`,
              content: Buffer.from(JSON.stringify(reviews, null, 2)).toString('base64'),
              sha: existingContent?.data?.sha || undefined
            });
            
            console.log('âœ… Updated reviews.json');
